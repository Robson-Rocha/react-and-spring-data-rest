{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "app_name": {
            "type": "string"
        },
        "repository_name": {
            "defaultValue": "[parameters('app_name')]",
            "type": "string"
        },
        "tag_name": {
            "type": "string"
        },
        "acr_resourcegroup_name": {
            "defaultValue": "[resourceGroup().name]",
            "type": "string"
        },
        "acr_name": {
            "type": "string"
        },
        "sqlserver_password": {
            "type": "securestring"
        },
        "location_name": {
            "defaultValue": "North Europe",
            "type": "string"
        }
    },

    "variables": {
        "registryResourceId": "[resourceId(subscription().subscriptionId, parameters('acr_resourcegroup_name'), 'Microsoft.ContainerRegistry/registries', parameters('acr_name'))]",
        "acr_server": "[concat(parameters('acr_name'), '.azurecr.io')]",

        "aci_name": "[concat('ACI-', toUpper(parameters('app_name')))]",
        "image": "[concat(variables('acr_server'), '/', parameters('repository_name'), ':', parameters('tag_name'))]",

        "sqlserver_name": "[concat('SQLSERVER-', toUpper(parameters('app_name')))]",
        "database_name": "[concat('SQLDB-', toUpper(parameters('app_name')))]",
        "sqlserver_login": "[parameters('app_name')]",

        "appservice_name": "[concat('ASP-', toUpper(parameters('app_name')))]",
        "appservice_autoscale_name": "[concat(variables('appservice_name'), '-AUTOSCALE')]",
        "webapp_name": "[concat('WEBAPP-', toUpper(parameters('app_name')))]",

        "appinsights_name": "[concat('AI-', toUpper(parameters('app_name')))]"
    },

    "resources": [
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2021-02-01-preview",
            "name": "[variables('sqlserver_name')]",
            "location": "[parameters('location_name')]",
            "kind": "v12.0",
            "properties": {
                "administratorLogin": "[variables('sqlserver_login')]",
                "administratorLoginPassword": "[parameters('sqlserver_password')]",
                "version": "12.0",
                "minimalTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "restrictOutboundNetworkAccess": "Disabled"
            }
        },
        {
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(variables('sqlserver_name'), '/', variables('database_name'))]",
            "location": "[parameters('location_name')]",
            "dependsOn": [
                "[variables('sqlserver_name')]"
            ],
            "sku": {
                "name": "Basic",
                "tier": "Basic",
                "capacity": 5
            },
            "kind": "v12.0,user",
            "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "catalogCollation": "SQL_Latin1_General_CP1_CI_AS",
                "zoneRedundant": false,
                "readScale": "Disabled",
                "requestedBackupStorageRedundancy": "Local",
                "isLedgerOn": false
            }
        },
        {
            "type": "Microsoft.Sql/servers/firewallRules",
            "apiVersion": "2021-02-01-preview",
            "name": "[concat(variables('sqlserver_name'), '/AllowAllWindowsAzureIps')]",
            "dependsOn": [
                "[variables('sqlserver_name')]"
            ],
            "properties": {
                "startIpAddress": "0.0.0.0",
                "endIpAddress": "0.0.0.0"
            }
        },
        {
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2021-03-01",
            "name": "[variables('aci_name')]",
            "location": "[parameters('location_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlserver_name'), variables('database_name'))]"
            ],
            "properties": {
                "sku": "Standard",
                "containers": [
                    {
                        "name": "[toLower(variables('aci_name'))]",
                        "properties": {
                            "image": "[variables('image')]",
                            "ports": [
                                {
                                    "protocol": "TCP",
                                    "port": 80
                                }
                            ],
                            "environmentVariables": [
                                {
                                    "name": "SQLSERVERADDRESS",
                                    "value": "[variables('sqlserver_name')]"
                                },
                                {
                                    "name": "DBUSERNAME",
                                    "value": "[variables('sqlserver_login')]"
                                },
                                {
                                    "name": "DBPASSWORD",
                                    "value": "[parameters('sqlserver_password')]"
                                },
                                {
                                    "name": "DBNAME",
                                    "value": "[variables('database_name')]"
                                }
                            ],
                            "resources": {
                                "requests": {
                                    "memoryInGB": 1.5,
                                    "cpu": 1
                                }
                            }
                        }
                    }
                ],
                "initContainers": [],
                "imageRegistryCredentials": [
                    {
                        "server": "[variables('acr_server')]",
                        "username": "[parameters('acr_name')]",
                        "password": "[listCredentials(resourceId('RG-REGISTRY', 'Microsoft.ContainerRegistry/registries',parameters('acr_name')),'2017-10-01').passwords[0].value]"
                    }
                ],
                "restartPolicy": "OnFailure",
                "ipAddress": {
                    "ports": [
                        {
                            "protocol": "TCP",
                            "port": 80
                        }
                    ],
                    "type": "Public",
                    "dnsNameLabel": "[toLower(variables('aci_name'))]"
                },
                "osType": "Linux"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-12-01",
            "name": "[variables('appservice_name')]",
            "location": "[parameters('location_name')]",
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('appinsights_name')]",
            "location": "[parameters('location_name')]",
            "dependsOn": [
                "[variables('appservice_name')]"
            ],
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Bluefield",
                "Request_Source": "rest"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2020-12-01",
            "name": "[variables('webapp_name')]",
            "location": "[parameters('location_name')]",
            "dependsOn": [
                "[variables('appservice_name')]",
                "[variables('appinsights_name')]",
                "[resourceId('Microsoft.Sql/servers/databases', variables('sqlserver_name'), variables('database_name'))]"
            ],
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(toLower(variables('webapp_name')), '.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(toLower(variables('webapp_name')), '.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[variables('appservice_name')]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "[concat('DOCKER|', reference(variables('registryResourceId'), '2019-05-01').loginServer, '/', parameters('repository_name'), ':', parameters('tag_name'))]",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": true,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1,
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(concat('Microsoft.Insights/components/', variables('appinsights_name')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                            "value": "[reference(concat('Microsoft.Insights/components/', variables('appinsights_name')), '2015-05-01').ConnectionString]"
                        },
                        {
                            "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "XDT_MicrosoftApplicationInsights_Mode",
                            "value": "default"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "[reference(variables('registryResourceId'), '2019-05-01').loginServer]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                            "value": "[listCredentials(variables('registryResourceId'), '2019-05-01').username]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                            "value": "[listCredentials(variables('registryResourceId'), '2019-05-01').passwords[0].value]"
                        },
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "false"
                        },
                        {
                            "name": "SQLSERVERADDRESS",
                            "value": "[variables('sqlserver_name')]"
                        },
                        {
                            "name": "DBUSERNAME",
                            "value": "[variables('sqlserver_login')]"
                        },
                        {
                            "name": "DBPASSWORD",
                            "value": "[parameters('sqlserver_password')]"
                        },
                        {
                            "name": "DBNAME",
                            "value": "[variables('database_name')]"
                        }
                    ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "customDomainVerificationId": "D061FF456AC0BE5EC14DE76BB23147CBFED6227861235E3014A1870BAC9C1D07",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "keyVaultReferenceIdentity": "SystemAssigned",
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false
            }
        },
        {
            "type": "microsoft.insights/autoscalesettings",
            "apiVersion": "2015-04-01",
            "name": "[variables('appservice_autoscale_name')]",
            "location": "[parameters('location_name')]",
            "dependsOn": [
                "[variables('appservice_name')]"
            ],
            "properties": {
                "profiles": [
                    {
                        "name": "Auto created scale condition",
                        "capacity": {
                            "minimum": "1",
                            "maximum": "5",
                            "default": "1"
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricNamespace": "microsoft.web/serverfarms",
                                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appservice_name'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 80,
                                    "dimensions": [],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT2M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricNamespace": "microsoft.web/serverfarms",
                                    "metricResourceUri": "[resourceId('Microsoft.Web/serverfarms', variables('appservice_name'))]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "LessThanOrEqual",
                                    "threshold": 40,
                                    "dimensions": [],
                                    "dividePerInstance": false
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": "1",
                                    "cooldown": "PT5M"
                                }
                            }
                        ]
                    }
                ],
                "enabled": true,
                "name": "[variables('appservice_autoscale_name')]",
                "targetResourceUri": "[resourceId('Microsoft.Web/serverfarms/', variables('appservice_name'))]",
                "notifications": []
            }
        }
    ]
}